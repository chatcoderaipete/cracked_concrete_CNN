import tensorflow as tf
from PIL import Image
import numpy as np

# Load the trained model
model_path = 'C:\\Users\\pete\\PycharmProjects\\crackedconcrete\\concrete_crack_detection_model.h5'
model = tf.keras.models.load_model(model_path)

# Function to preprocess the image
def preprocess_image(image_path, target_size=(224, 224)):
    # Load the image
    img = Image.open(image_path)

    # Convert the image to RGB format (in case it's not)
    if img.mode != 'RGB':
        img = img.convert('RGB')

    # Resize the image
    img = img.resize(target_size)

    # Convert the image to a numpy array
    img_array = np.array(img)

    # Normalize the array
    img_array = img_array / 255.0

    # Reshape the array for the model
    img_array = img_array.reshape(1, *target_size, 3)

    return img_array

# Function to predict if there is cracked concrete
def predict_cracked_concrete(image_path):
    img = preprocess_image(image_path)
    prediction = model.predict(img)

    if prediction[0][0] > 0.5:
        return "Cracked Concrete Detected"
    else:
        return "No Cracked Concrete Detected"

# Loop until the user types 'stop'
while True:
    # Input image path
    image_path = input("Enter the path to the image or type 'stop' to exit: ")

    # Check if the user wants to stop the loop
    if image_path.lower() == 'stop':
        break

    # Make a prediction
    try:
        result = predict_cracked_concrete(image_path)
        print(result)
    except Exception as e:
        print(f"An error occurred: {e}")
